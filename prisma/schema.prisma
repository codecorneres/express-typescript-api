// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  // Relations
  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  status    Boolean  @default(true)
  email     String   @unique
  name      String
  password  String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  role_id Int
  role    Role @relation(fields: [role_id], references: [id])

  projects      User_Project[]
  ownerProjects Project[]
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner_id    Int

  // Relations

  users User_Project[]
  owner User           @relation(fields: [userId], references: [id])

  userId Int
}

model Issue {
  id           Int      @id @default(autoincrement())
  issue_number String   @unique
  title        String
  description  String?
  estimate     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  assigned_by  Int
  assigned_to  Int
  status_id    Int
  project_id   Int

  // Relations
}

model Status {
  id    Int    @id @default(autoincrement())
  title String
}

model Attachment {
  id        Int      @id @default(autoincrement())
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user_id    Int
  project_id Int
  issue_id   Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user_id    Int
  project_id Int
  issue_id   Int
}

model User_Project {
  // Relations
  user_id    Int
  user       User    @relation(fields: [user_id], references: [id])
  project_id Int
  project    Project @relation(fields: [project_id], references: [id])

  @@id([user_id, project_id])
}

model Timesheet {
  id              Int      @id @default(autoincrement())
  description     String?
  time_in_minutes Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  user_id    Int
  project_id Int
  issue_id   Int
}
